{"ast":null,"code":"import React, { useEffect, useRef, useState } from 'react';\nimport ReactSlidySlider from './react-slidy-slider';\n\nfunction noop() {}\n\nvar CLASSNAMES = {\n  contain: 'react-Slidy--contain',\n  cover: 'react-Slidy--cover',\n  fullHeight: 'react-Slidy--fullHeight',\n  fullWidth: 'react-Slidy--fullWidth'\n};\n\nvar ReactSlidy = function ReactSlidy(_ref) {\n  var ArrowLeft = _ref.ArrowLeft,\n      ArrowRight = _ref.ArrowRight,\n      children = _ref.children,\n      _ref$classNameBase = _ref.classNameBase,\n      classNameBase = _ref$classNameBase === void 0 ? 'react-Slidy' : _ref$classNameBase,\n      _ref$doAfterDestroy = _ref.doAfterDestroy,\n      doAfterDestroy = _ref$doAfterDestroy === void 0 ? noop : _ref$doAfterDestroy,\n      _ref$doAfterInit = _ref.doAfterInit,\n      doAfterInit = _ref$doAfterInit === void 0 ? noop : _ref$doAfterInit,\n      _ref$doAfterSlide = _ref.doAfterSlide,\n      doAfterSlide = _ref$doAfterSlide === void 0 ? noop : _ref$doAfterSlide,\n      _ref$doBeforeSlide = _ref.doBeforeSlide,\n      doBeforeSlide = _ref$doBeforeSlide === void 0 ? noop : _ref$doBeforeSlide,\n      imageObjectFit = _ref.imageObjectFit,\n      _ref$itemsToPreload = _ref.itemsToPreload,\n      itemsToPreload = _ref$itemsToPreload === void 0 ? 1 : _ref$itemsToPreload,\n      _ref$initialSlide = _ref.initialSlide,\n      initialSlide = _ref$initialSlide === void 0 ? 0 : _ref$initialSlide,\n      _ref$ease = _ref.ease,\n      ease = _ref$ease === void 0 ? 'ease' : _ref$ease,\n      _ref$lazyLoadSlider = _ref.lazyLoadSlider,\n      lazyLoadSlider = _ref$lazyLoadSlider === void 0 ? true : _ref$lazyLoadSlider,\n      _ref$lazyLoadConfig = _ref.lazyLoadConfig,\n      lazyLoadConfig = _ref$lazyLoadConfig === void 0 ? {\n    offset: 150\n  } : _ref$lazyLoadConfig,\n      _ref$keyboardNavigati = _ref.keyboardNavigation,\n      keyboardNavigation = _ref$keyboardNavigati === void 0 ? false : _ref$keyboardNavigati,\n      _ref$numOfSlides = _ref.numOfSlides,\n      numOfSlides = _ref$numOfSlides === void 0 ? 1 : _ref$numOfSlides,\n      _ref$sanitize = _ref.sanitize,\n      sanitize = _ref$sanitize === void 0 ? true : _ref$sanitize,\n      _ref$slide = _ref.slide,\n      slide = _ref$slide === void 0 ? 0 : _ref$slide,\n      _ref$slideSpeed = _ref.slideSpeed,\n      slideSpeed = _ref$slideSpeed === void 0 ? 500 : _ref$slideSpeed,\n      _ref$showArrows = _ref.showArrows,\n      showArrows = _ref$showArrows === void 0 ? true : _ref$showArrows,\n      _ref$useFullHeight = _ref.useFullHeight,\n      useFullHeight = _ref$useFullHeight === void 0 ? false : _ref$useFullHeight,\n      _ref$useFullWidth = _ref.useFullWidth,\n      useFullWidth = _ref$useFullWidth === void 0 ? true : _ref$useFullWidth;\n\n  var _useState = useState(!lazyLoadSlider),\n      showSlider = _useState[0],\n      setShowSlider = _useState[1];\n\n  var nodeEl = useRef(null);\n  useEffect(function () {\n    var observer;\n\n    if (lazyLoadSlider) {\n      var initLazyLoadSlider = function initLazyLoadSlider() {\n        // if we support IntersectionObserver, let's use it\n        var _lazyLoadConfig$offse = lazyLoadConfig.offset,\n            offset = _lazyLoadConfig$offse === void 0 ? 0 : _lazyLoadConfig$offse;\n        observer = new window.IntersectionObserver(handleIntersection, {\n          rootMargin: offset + \"px 0px 0px\"\n        });\n        observer.observe(nodeEl.current);\n      };\n\n      if (!('IntersectionObserver' in window)) {\n        import('intersection-observer').then(initLazyLoadSlider);\n      } else {\n        initLazyLoadSlider();\n      }\n    }\n\n    return function () {\n      return observer && observer.disconnect();\n    };\n  }, [] // eslint-disable-line\n  );\n\n  var handleIntersection = function handleIntersection(_ref2, observer) {\n    var entry = _ref2[0];\n\n    if (entry.isIntersecting || entry.intersectionRatio > 0) {\n      observer.unobserve(entry.target);\n      setShowSlider(true);\n    }\n  };\n\n  var numOfSlidesSanitzed = Math.min(numOfSlides, React.Children.count(children));\n  var rootClassName = [classNameBase, useFullHeight && CLASSNAMES.fullHeight, useFullWidth && CLASSNAMES.fullWidth, imageObjectFit && CLASSNAMES[imageObjectFit]].filter(Boolean).join(' ');\n  var reactSlidySliderProps = {\n    ArrowLeft: ArrowLeft,\n    ArrowRight: ArrowRight,\n    children: children,\n    classNameBase: classNameBase,\n    doAfterDestroy: doAfterDestroy,\n    doAfterInit: doAfterInit,\n    doAfterSlide: doAfterSlide,\n    doBeforeSlide: doBeforeSlide,\n    ease: ease,\n    initialSlide: initialSlide,\n    itemsToPreload: itemsToPreload,\n    keyboardNavigation: keyboardNavigation,\n    numOfSlides: numOfSlides,\n    slide: slide,\n    showArrows: showArrows,\n    slideSpeed: slideSpeed\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: rootClassName,\n    ref: nodeEl\n  }, showSlider && /*#__PURE__*/React.createElement(ReactSlidySlider, Object.assign({}, reactSlidySliderProps, {\n    numOfSlides: sanitize ? numOfSlidesSanitzed : numOfSlides\n  }), children));\n};\n\nexport default ReactSlidy;","map":{"version":3,"sources":["D:/PhladRian/frontend/node_modules/react-slidy/lib/index.js"],"names":["React","useEffect","useRef","useState","ReactSlidySlider","noop","CLASSNAMES","contain","cover","fullHeight","fullWidth","ReactSlidy","_ref","ArrowLeft","ArrowRight","children","_ref$classNameBase","classNameBase","_ref$doAfterDestroy","doAfterDestroy","_ref$doAfterInit","doAfterInit","_ref$doAfterSlide","doAfterSlide","_ref$doBeforeSlide","doBeforeSlide","imageObjectFit","_ref$itemsToPreload","itemsToPreload","_ref$initialSlide","initialSlide","_ref$ease","ease","_ref$lazyLoadSlider","lazyLoadSlider","_ref$lazyLoadConfig","lazyLoadConfig","offset","_ref$keyboardNavigati","keyboardNavigation","_ref$numOfSlides","numOfSlides","_ref$sanitize","sanitize","_ref$slide","slide","_ref$slideSpeed","slideSpeed","_ref$showArrows","showArrows","_ref$useFullHeight","useFullHeight","_ref$useFullWidth","useFullWidth","_useState","showSlider","setShowSlider","nodeEl","observer","initLazyLoadSlider","_lazyLoadConfig$offse","window","IntersectionObserver","handleIntersection","rootMargin","observe","current","then","disconnect","_ref2","entry","isIntersecting","intersectionRatio","unobserve","target","numOfSlidesSanitzed","Math","min","Children","count","rootClassName","filter","Boolean","join","reactSlidySliderProps","createElement","className","ref","Object","assign"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport ReactSlidySlider from './react-slidy-slider';\n\nfunction noop() {}\n\nvar CLASSNAMES = {\n  contain: 'react-Slidy--contain',\n  cover: 'react-Slidy--cover',\n  fullHeight: 'react-Slidy--fullHeight',\n  fullWidth: 'react-Slidy--fullWidth'\n};\n\nvar ReactSlidy = function ReactSlidy(_ref) {\n  var ArrowLeft = _ref.ArrowLeft,\n      ArrowRight = _ref.ArrowRight,\n      children = _ref.children,\n      _ref$classNameBase = _ref.classNameBase,\n      classNameBase = _ref$classNameBase === void 0 ? 'react-Slidy' : _ref$classNameBase,\n      _ref$doAfterDestroy = _ref.doAfterDestroy,\n      doAfterDestroy = _ref$doAfterDestroy === void 0 ? noop : _ref$doAfterDestroy,\n      _ref$doAfterInit = _ref.doAfterInit,\n      doAfterInit = _ref$doAfterInit === void 0 ? noop : _ref$doAfterInit,\n      _ref$doAfterSlide = _ref.doAfterSlide,\n      doAfterSlide = _ref$doAfterSlide === void 0 ? noop : _ref$doAfterSlide,\n      _ref$doBeforeSlide = _ref.doBeforeSlide,\n      doBeforeSlide = _ref$doBeforeSlide === void 0 ? noop : _ref$doBeforeSlide,\n      imageObjectFit = _ref.imageObjectFit,\n      _ref$itemsToPreload = _ref.itemsToPreload,\n      itemsToPreload = _ref$itemsToPreload === void 0 ? 1 : _ref$itemsToPreload,\n      _ref$initialSlide = _ref.initialSlide,\n      initialSlide = _ref$initialSlide === void 0 ? 0 : _ref$initialSlide,\n      _ref$ease = _ref.ease,\n      ease = _ref$ease === void 0 ? 'ease' : _ref$ease,\n      _ref$lazyLoadSlider = _ref.lazyLoadSlider,\n      lazyLoadSlider = _ref$lazyLoadSlider === void 0 ? true : _ref$lazyLoadSlider,\n      _ref$lazyLoadConfig = _ref.lazyLoadConfig,\n      lazyLoadConfig = _ref$lazyLoadConfig === void 0 ? {\n    offset: 150\n  } : _ref$lazyLoadConfig,\n      _ref$keyboardNavigati = _ref.keyboardNavigation,\n      keyboardNavigation = _ref$keyboardNavigati === void 0 ? false : _ref$keyboardNavigati,\n      _ref$numOfSlides = _ref.numOfSlides,\n      numOfSlides = _ref$numOfSlides === void 0 ? 1 : _ref$numOfSlides,\n      _ref$sanitize = _ref.sanitize,\n      sanitize = _ref$sanitize === void 0 ? true : _ref$sanitize,\n      _ref$slide = _ref.slide,\n      slide = _ref$slide === void 0 ? 0 : _ref$slide,\n      _ref$slideSpeed = _ref.slideSpeed,\n      slideSpeed = _ref$slideSpeed === void 0 ? 500 : _ref$slideSpeed,\n      _ref$showArrows = _ref.showArrows,\n      showArrows = _ref$showArrows === void 0 ? true : _ref$showArrows,\n      _ref$useFullHeight = _ref.useFullHeight,\n      useFullHeight = _ref$useFullHeight === void 0 ? false : _ref$useFullHeight,\n      _ref$useFullWidth = _ref.useFullWidth,\n      useFullWidth = _ref$useFullWidth === void 0 ? true : _ref$useFullWidth;\n\n  var _useState = useState(!lazyLoadSlider),\n      showSlider = _useState[0],\n      setShowSlider = _useState[1];\n\n  var nodeEl = useRef(null);\n  useEffect(function () {\n    var observer;\n\n    if (lazyLoadSlider) {\n      var initLazyLoadSlider = function initLazyLoadSlider() {\n        // if we support IntersectionObserver, let's use it\n        var _lazyLoadConfig$offse = lazyLoadConfig.offset,\n            offset = _lazyLoadConfig$offse === void 0 ? 0 : _lazyLoadConfig$offse;\n        observer = new window.IntersectionObserver(handleIntersection, {\n          rootMargin: offset + \"px 0px 0px\"\n        });\n        observer.observe(nodeEl.current);\n      };\n\n      if (!('IntersectionObserver' in window)) {\n        import('intersection-observer').then(initLazyLoadSlider);\n      } else {\n        initLazyLoadSlider();\n      }\n    }\n\n    return function () {\n      return observer && observer.disconnect();\n    };\n  }, [] // eslint-disable-line\n  );\n\n  var handleIntersection = function handleIntersection(_ref2, observer) {\n    var entry = _ref2[0];\n\n    if (entry.isIntersecting || entry.intersectionRatio > 0) {\n      observer.unobserve(entry.target);\n      setShowSlider(true);\n    }\n  };\n\n  var numOfSlidesSanitzed = Math.min(numOfSlides, React.Children.count(children));\n  var rootClassName = [classNameBase, useFullHeight && CLASSNAMES.fullHeight, useFullWidth && CLASSNAMES.fullWidth, imageObjectFit && CLASSNAMES[imageObjectFit]].filter(Boolean).join(' ');\n  var reactSlidySliderProps = {\n    ArrowLeft: ArrowLeft,\n    ArrowRight: ArrowRight,\n    children: children,\n    classNameBase: classNameBase,\n    doAfterDestroy: doAfterDestroy,\n    doAfterInit: doAfterInit,\n    doAfterSlide: doAfterSlide,\n    doBeforeSlide: doBeforeSlide,\n    ease: ease,\n    initialSlide: initialSlide,\n    itemsToPreload: itemsToPreload,\n    keyboardNavigation: keyboardNavigation,\n    numOfSlides: numOfSlides,\n    slide: slide,\n    showArrows: showArrows,\n    slideSpeed: slideSpeed\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: rootClassName,\n    ref: nodeEl\n  }, showSlider && /*#__PURE__*/React.createElement(ReactSlidySlider, Object.assign({}, reactSlidySliderProps, {\n    numOfSlides: sanitize ? numOfSlidesSanitzed : numOfSlides\n  }), children));\n};\n\nexport default ReactSlidy;"]},"metadata":{},"sourceType":"module"}