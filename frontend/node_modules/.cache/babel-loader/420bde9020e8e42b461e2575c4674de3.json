{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"D:/PhladRian/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"D:\\\\PhladRian\\\\frontend\\\\src\\\\pages\\\\Pagination.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\n/* eslint-disable */\nimport React, { useState } from \"react\";\nexport var Pagination = function Pagination(_ref) {\n  _s();\n\n  var Page_AllPost = _ref.Page_AllPost,\n      TotalPost = _ref.TotalPost,\n      Current_Page = _ref.Current_Page,\n      paginate = _ref.paginate,\n      ItemCount = _ref.ItemCount;\n  var pageNum = [];\n\n  var _useState = useState(5),\n      _useState2 = _slicedToArray(_useState, 2),\n      Page_Limit = _useState2[0],\n      setPage_Limit = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      minPage_Limit = _useState4[0],\n      setminPage_Limit = _useState4[1];\n\n  var _useState5 = useState(5),\n      _useState6 = _slicedToArray(_useState5, 2),\n      maxPage_Limit = _useState6[0],\n      setmaxPage_Limit = _useState6[1];\n\n  function prevClick() {\n    if (Current_Page > 1) {\n      paginate(Current_Page - 1);\n    }\n\n    if ((Current_Page - 1) % Page_Limit == 0 && Current_Page > 1) {\n      paginate(Current_Page - 1);\n      setmaxPage_Limit(maxPage_Limit - Page_Limit);\n      setminPage_Limit(minPage_Limit - Page_Limit);\n    }\n  }\n\n  function nextClick() {\n    if (Current_Page < ItemCount) {\n      paginate(Current_Page + 1);\n    }\n\n    if (Current_Page + 1 > maxPage_Limit && Current_Page < ItemCount) {\n      paginate(Current_Page + 1);\n      setmaxPage_Limit(maxPage_Limit + Page_Limit);\n      setminPage_Limit(minPage_Limit + Page_Limit);\n    }\n  }\n\n  var DecreTab = null;\n\n  if (minPage_Limit >= 1) {\n    DecreTab = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-sm-1\",\n      children: /*#__PURE__*/_jsxDEV(\"li\", {\n        id: \"prev\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          onClick: function onClick() {\n            prevClick();\n          },\n          children: \"\\xAB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, _this);\n  }\n\n  var IncreTab = null;\n\n  if (ItemCount > maxPage_Limit) {\n    IncreTab = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-sm-1\",\n      children: /*#__PURE__*/_jsxDEV(\"li\", {\n        id: \"next\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          onClick: function onClick() {\n            nextClick();\n          },\n          children: \"\\xBB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, _this);\n  }\n\n  for (var i = 1; i <= Math.ceil(TotalPost / Page_AllPost); i++) {\n    pageNum.push(i);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"pagination\",\n      children: [DecreTab, pageNum.map(function (number) {\n        if (number < maxPage_Limit + 1 && number > minPage_Limit) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-sm-1\",\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              id: number,\n              className: Current_Page === number ? \"active\" : \"\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                onClick: function onClick() {\n                  return paginate(number);\n                },\n                children: number\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 19\n              }, _this)\n            }, number, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, _this);\n        } else {\n          return null;\n        }\n      }), IncreTab]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Pagination, \"bM5Ipbwl7iC7DjVYO1IZ+0e/0S4=\");\n\n_c = Pagination;\nexport default Pagination;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"sources":["D:/PhladRian/frontend/src/pages/Pagination.js"],"names":["React","useState","Pagination","Page_AllPost","TotalPost","Current_Page","paginate","ItemCount","pageNum","Page_Limit","setPage_Limit","minPage_Limit","setminPage_Limit","maxPage_Limit","setmaxPage_Limit","prevClick","nextClick","DecreTab","IncreTab","i","Math","ceil","push","map","number"],"mappings":"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","sourcesContent":["/* eslint-disable */\r\nimport React, { useState } from \"react\";\r\n\r\nexport const Pagination = ({\r\n  Page_AllPost,\r\n  TotalPost,\r\n  Current_Page,\r\n  paginate,\r\n  ItemCount,\r\n}) => {\r\n  const pageNum = [];\r\n  const [Page_Limit, setPage_Limit] = useState(5);\r\n  const [minPage_Limit, setminPage_Limit] = useState(0);\r\n  const [maxPage_Limit, setmaxPage_Limit] = useState(5);\r\n\r\n  function prevClick() {\r\n    if (Current_Page > 1) {\r\n      paginate(Current_Page - 1);\r\n    }\r\n    if ((Current_Page - 1) % Page_Limit == 0 && Current_Page > 1) {\r\n      paginate(Current_Page - 1);\r\n      setmaxPage_Limit(maxPage_Limit - Page_Limit);\r\n      setminPage_Limit(minPage_Limit - Page_Limit);\r\n    }\r\n  }\r\n\r\n  function nextClick() {\r\n    if (Current_Page < ItemCount) {\r\n      paginate(Current_Page + 1);\r\n    }\r\n    if (Current_Page + 1 > maxPage_Limit && Current_Page < ItemCount) {\r\n      paginate(Current_Page + 1);\r\n      setmaxPage_Limit(maxPage_Limit + Page_Limit);\r\n      setminPage_Limit(minPage_Limit + Page_Limit);\r\n    }\r\n  }\r\n\r\n  let DecreTab = null;\r\n  if (minPage_Limit >= 1) {\r\n    DecreTab = (\r\n        <div className=\"col-sm-1\">\r\n          <li id=\"prev\">\r\n            <a\r\n              onClick={() => {\r\n                prevClick();\r\n              }}\r\n            >\r\n              «\r\n            </a>\r\n          </li>\r\n        </div>\r\n    );\r\n  }\r\n\r\n  let IncreTab = null;\r\n  if (ItemCount > maxPage_Limit) {\r\n    IncreTab = (\r\n        <div className=\"col-sm-1\">\r\n          <li id=\"next\">\r\n            <a\r\n              onClick={() => {\r\n                nextClick();\r\n              }}\r\n            >\r\n              »\r\n            </a>\r\n          </li>\r\n        </div>\r\n    );\r\n  }\r\n\r\n  for (let i = 1; i <= Math.ceil(TotalPost / Page_AllPost); i++) {\r\n    pageNum.push(i);\r\n  }\r\n\r\n  return (\r\n    <nav>\r\n      <ul className=\"pagination\">\r\n       {DecreTab}\r\n        {pageNum.map((number) => {\r\n          if (number < maxPage_Limit + 1 && number > minPage_Limit) {\r\n            return (\r\n              <div className=\"col-sm-1\">\r\n                <li\r\n                  key={number}\r\n                  id={number}\r\n                  className={Current_Page === number ? \"active\" : \"\"}\r\n                >\r\n                  <a onClick={() => paginate(number)}>{number}</a>\r\n                </li>\r\n              </div>\r\n            );\r\n          } else {\r\n            return null;\r\n          }\r\n        })}\r\n        {IncreTab}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n"]},"metadata":{},"sourceType":"module"}